问题34：从小打大的顺序的第N个丑数
把只包含质因子2、3和5的数称作丑数（Ugly Number）。质因子：除了1和数本身
例如6、8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。

//=====概念
1、若 m 是 n 的因子，是指 n 能被 m 整除，也就是 n % m == 0
2、丑数只能被2、3、5整除
3、如果能被 2整除，连续除以 2，如果能被 3整除，连续除以 3，如果能被 5整除，连续除以 5，结果若是 1，则为丑数

//=====第一次提交，也是课本的思想，复杂度太多，超时了
//=====每一个整数都需要计算
class Solution {
public:
    bool IsUgly(int num){
        while(num % 2 == 0)
            num /= 2;
        while(num % 3 == 0)
            num /= 3;
        while(num % 5 == 0)
            num /= 5;
        return (num == 1) ? true : false;
    }
    int GetUglyNumber_Solution(int index) {
        if(index <= 0)
            return 0;
        int UglyFoundIndex = 0;
        int number = 1;
        while(UglyFoundIndex <= index){
            if(IsUgly(number))
                UglyFoundIndex++;
            number++;
        }
        return number;
    }
};

//=====创建数组保存已经找到的丑数，用空间换时间
//=====需要看牛客解说
class Solution {
public:
    int GetUglyNumber_Solution(int index) {
        if(index <= 0)
            return 0;
        int* UglyGroup = new int[index];
        UglyGroup[0] = 1;
        int p2 = 0;
        int p3 = 0;
        int p5 = 0;
        for(int i = 1; i < index; ++i){     //这里的判别条件是小于，而不是小于等于
            UglyGroup[i] = min(min(UglyGroup[p2] * 2, UglyGroup[p3] * 3), UglyGroup[p5] * 5);
            if(UglyGroup[i] == UglyGroup[p2] * 2)
                p2++;
            if(UglyGroup[i] == UglyGroup[p3] * 3)
                p3++;
            if(UglyGroup[i] == UglyGroup[p5] * 5)
                p5++;
        }
        int Result = UglyGroup[index - 1];  //这里是值得记住的
        delete [] UglyGroup;
        return Result;
    }
};
























