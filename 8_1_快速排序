书本讲得还没网上讲得清楚：https://blog.csdn.net/qq_28584889/article/details/88136498

主要思想：找基准值（确认为数组中任意一个位置的值，一般选最开始的left）、找小于和大于这个基准值的数分为两个子数组（用交换来分），递归



void quicksort(int left, int right, vector<int>& arr)
{
    int i, j, base, tmp;
    i = left;
    j = right;
    base = arr[left];    //选最左边为基准值
    tmp = 0;
    while (i < j){
        while (i < j && arr[j] >= base) //从最右边开始找小于这个基准值的位置
            j--;
        while (i < j && arr[i] <= base) //从最左边开始找大于这个基准值的位置
            i++;
        if (i < j){   //交换这两个值的位置
            tmp = arr[j];
            arr[j] = arr[i];
            arr[i] = tmp;
        }
    }//迭代直到i与j相遇
    
    //这里是开始交换i位置和基准值位置的值，在上面已经确定了i位置是中间位置，i的左边比i小，i的右边比i大
    arr[left] = arr[i];
    arr[i] = base;
    //递归开始
    quicksort(left, i - 1, arr);
    quicksort(i + 1, right, arr)
}
